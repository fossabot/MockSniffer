mock_list = {
    'java.io.File',
    'java.io.FileInputStream',
    'java.io.FileOutputStream',
    'java.io.FileReader',
    'java.io.FileWriter',
    'java.io.IOException',
    'java.io.PrintStream',
    'java.io.PrintWriter',
    'java.io.RandomAccessFile',

    'java.lang.ArithmeticException',
    'java.lang.ArrayIndexOutOfBoundsException',
    'java.lang.Error',
    'java.lang.Exception',
    'java.lang.IllegalAccessException',
    'java.lang.IllegalArgumentException',
    'java.lang.IllegalStateException',
    'java.lang.NullPointerException',
    'java.lang.Runtime',
    'java.lang.RuntimeException',
    'java.lang.Thread',
    'java.lang.Throwable',

    'java.net.DatagramSocket',
    'java.net.InetAddress',
    'java.net.InetSocketAddress',
    'java.net.NetworkInterface',
    'java.net.ServerSocket',
    'java.net.Socket',
    'java.net.SocketImpl',
    'java.net.URI',
    'java.net.URL',
    'java.net.URLStreamHandler',

    'java.nio.channels.ServerSocketChannel',
    'java.nio.channels.SocketChannel',

    'java.security.SecureRandom',

    'java.text.DateFormat',
    'java.text.SimpleDateFormat',

    'java.time.Clock',
    'java.time.Instant',
    'java.time.LocalDate',
    'java.time.LocalDateTime',
    'java.time.LocalTime',
    'java.time.MonthDay',
    'java.time.OffsetDateTime',
    'java.time.OffsetTime',
    'java.time.Year',
    'java.time.YearMonth',
    'java.time.ZonedDateTime',
    'java.time.chrono.HijrahChronology',
    'java.time.chrono.HijrahDate',
    'java.time.chrono.IsoChronology',
    'java.time.chrono.JapaneseChronology',
    'java.time.chrono.JapaneseDate',
    'java.time.chrono.MinguoChronology',
    'java.time.chrono.MinguoDate',
    'java.time.chrono.ThaiBuddhistChronology',
    'java.time.chrono.ThaiBuddhistDate',

    'java.util.Calendar',
    'java.util.Date',
    'java.util.GregorianCalendar',
    'java.util.Locale',
    'java.util.Random',
    'java.util.TimeZone',
    'java.util.Timer',
    'java.util.UUID',
    'java.util.logging.FileHandler',
    'java.util.logging.LogRecord',
    'java.util.pref.Preferences',
    'java.util.zip.ZipFile'
}


def baseline2(entry):
    return entry['D'] in mock_list
